@using Glimpse.Core.Configuration
@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    <div class="form">
        <label for="customer" >Customer</label>
        <div class="tt-container">
            <input id="customers" data-rule-validcustomer="true" required name="customer" class="form-control">
        </div>
    </div>
    
    <div class="form-group">
        <label for="movie">Movie</label>
    <div class="tt-container">
        <input id="movie" data-rule-atleastOneMovie="true" name="movie" type="text" value="" class="form-control" />
        </div>
        </div>
    <div class="row p-2">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>
        

        <button class="btn btn-dark">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function() {
            var vm = {
                MoviesIds: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customers').typeahead(
                {
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select",
                function(e, customer) {
                    vm.CustomerId = customer.id;
                });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead(
                {
                    minLength: 3,
                    highlight: true
                },
                {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on("typeahead:select",
                function(e, movie) {
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                    $("#movie").typeahead("val", "");

                    vm.MoviesIds.push(movie.id);

                    });

            $.validator.addMethod("validCustomer",
                function() {
                    return vm.CustomerId && vm.CustomerId !== 0;
                },
                "Please select a valid customer");

            $.validator.addMethod("atleastOneMovie",
                function() {
                    return vm.MoviesIds.length > 0;
                },
                "Please select atleast one movie.");


            $("#newRental").validate(
                {
                    submitHandler : function() {
                     
                        $.ajax({
                                url: '/api/newRentals',
                                method: "POST",
                                data: vm
                            })
                            .done(function() {
                                toastr.success("Rentals Recorded successfully!!!");
                                $('#customers').typeahead("val", "");
                                $('#movie').typeahead("val", "");
                                $("#movies").empty();

                                vm = {
                                    MoviesIds: []
                                };


                                validator.resetForm();

                            })
                            .fail(function() {
                                toastr.fail("Rentals failed !!!");
                            });

                        return false;
                    }
                });

        });
    </script>
}
